application.java

package com.ngos.creditcard.model;

import javax.persistence.*;
import java.util.List;

@Entity
@Table(name = "applications")
public class Application {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "applicant_name")
    private String applicantName;

    @Column(name = "email")
    private String email;   // ‚úÖ Needed for NotificationService

    @Column(name = "credit_score")
    private Integer creditScore;

    @Column(name = "status")
    private String status;

    // ‚úÖ One Application can have many CreditCards
    @OneToMany(mappedBy = "application", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<CreditCard> creditCards;

    // ---------- getters & setters ----------

    public Long getId() {
        return id;
    }
    public void setId(Long id) {
        this.id = id;
    }

    public String getApplicantName() {
        return applicantName;
    }
    public void setApplicantName(String applicantName) {
        this.applicantName = applicantName;
    }

    public String getEmail() {
        return email;
    }
    public void setEmail(String email) {
        this.email = email;
    }

    public Integer getCreditScore() {
        return creditScore;
    }
    public void setCreditScore(Integer creditScore) {
        this.creditScore = creditScore;
    }

    public String getStatus() {
        return status;
    }
    public void setStatus(String status) {
        this.status = status;
    }

    public List<CreditCard> getCreditCards() {
        return creditCards;
    }
    public void setCreditCards(List<CreditCard> creditCards) {
        this.creditCards = creditCards;
    }
}


notificationservice.java

package com.ngos.creditcard.service;

import com.ngos.creditcard.model.CreditCard;
import org.springframework.stereotype.Service;

@Service
public class NotificationService {

    public void notifyAllSystems(CreditCard card) {
        notifyTPS(card);
        notifyMailManager(card);
        notifyPrintShop(card);
    }

    private void notifyTPS(CreditCard card) {
        System.out.println("‚úÖ Notifying TPS for card: " + card.getCardNumber());
    }

    private void notifyMailManager(CreditCard card) {
        String email = card.getApplication().getEmail();
        System.out.println("üìß Email sent to applicant (" + email + ") for card: " + card.getCardNumber());
    }

    private void notifyPrintShop(CreditCard card) {
        System.out.println("üñ®Ô∏è PrintShop request for card: " + card.getCardNumber());
    }
}
